# docker rm car-manager cm-pgadmin brand-manager cm-postgres bm-postgres
services:
  bm-postgres:
    image: postgres
    restart: always
    container_name: bm-postgres
    environment:
      POSTGRES_DB: brand-manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d brand-manager" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - cm-network

  cm-postgres:
    image: postgres
    restart: always
    container_name: cm-postgres
    environment:
      POSTGRES_DB: car-manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432
    ports:
      - 5433:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d car-manager" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - cm-network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: cm-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - 5050:80
    depends_on:
      bm-postgres:
        condition: service_healthy
      cm-postgres:
        condition: service_healthy
    networks:
      - cm-network

  brand-manager:
    image: adautomendes/brand-manager
    container_name: brand-manager
    ports:
      - 8080:8080
    environment:
      - LOG_LEVEL=INFO
      - SERVER_HOST=brand-manager
      - SERVER_PORT=8080
      - DB_NAME=brand-manager
      - DB_HOST=bm-postgres
      - DB_PORT=5432
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      bm-postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - cm-network

  car-manager:
    build:
      dockerfile: ./Dockerfile
      context: ./
      args:
        JAR_FILE: target/car-manager-1.0.0.jar
    container_name: car-manager
    ports:
      - 8081:8081
    environment:
      - LOG_LEVEL=INFO
      - SERVER_HOST=car-manager
      - SERVER_PORT=8081
      - DB_NAME=car-manager
      - DB_HOST=cm-postgres
      - DB_PORT=5432
      - PUBLISHER_MANAGER_HOST=brand-manager
      - PUBLISHER_MANAGER_PORT=8080
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      cm-postgres:
        condition: service_healthy
      brand-manager:
        condition: service_healthy
    networks:
      - cm-network

networks:
  cm-network:
    driver: bridge